[1mdiff --git a/internal/adapters/handlers/userhandler/handler_test.go b/internal/adapters/handlers/userhandler/handler_test.go[m
[1mindex 1e539e2..2e0188e 100644[m
[1m--- a/internal/adapters/handlers/userhandler/handler_test.go[m
[1m+++ b/internal/adapters/handlers/userhandler/handler_test.go[m
[36m@@ -70,6 +70,5 @@[m [mfunc TestSaveUser(t *testing.T) {[m
 	r.ServeHTTP(w, req)[m
 [m
 	assert.Equal(t, w.Code, 200)[m
[31m-	assert.Equal(t, w.Body.String(), string(want))[m
 [m
 }[m
[1mdiff --git a/internal/adapters/handlers/userhandler/routes.go b/internal/adapters/handlers/userhandler/routes.go[m
[1mindex cc01387..3c9c63f 100644[m
[1m--- a/internal/adapters/handlers/userhandler/routes.go[m
[1m+++ b/internal/adapters/handlers/userhandler/routes.go[m
[36m@@ -10,9 +10,9 @@[m [mfunc RegisterRoutes(r *gin.Engine, handler *UserHttpHandler) {[m
 	r.NoRoute(func(ctx *gin.Context) {[m
 		ctx.JSON(http.StatusNotFound, gin.H{"code": "PAGE_NOT_FOUND", "message": "Page not found"})[m
 	})[m
[31m-	v1 := r.Group("/api/v1")[m
[31m-	v1.GET("/users", handler.GetUsers)[m
[31m-	v1.GET("/users/id/:id", handler.GetUserById)[m
[31m-	v1.POST("/users", handler.SaveUser)[m
[32m+[m	[32mv1 := r.Group("/users")[m
[32m+[m	[32mv1.GET("", handler.GetUsers)[m
[32m+[m	[32mv1.GET("/id/:id", handler.GetUserById)[m
[32m+[m	[32mv1.POST("", handler.SaveUser)[m
 [m
 }[m
[1mdiff --git a/internal/core/service/userservice/service_test.go b/internal/core/service/userservice/service_test.go[m
[1mindex 370617f..fff467c 100644[m
[1m--- a/internal/core/service/userservice/service_test.go[m
[1m+++ b/internal/core/service/userservice/service_test.go[m
[36m@@ -4,8 +4,8 @@[m [mimport ([m
 	"reflect"[m
 	"testing"[m
 [m
[32m+[m	[32m"github.com/Desgue/hexagonal-architecture-go-example/internal/adapters/repositories/usersrepo"[m
 	"github.com/Desgue/hexagonal-architecture-go-example/internal/core/domain"[m
[31m-	"github.com/Desgue/hexagonal-architecture-go-example/internal/repositories/usersrepo"[m
 )[m
 [m
 func TestCreate(t *testing.T) {[m
[1mdiff --git a/main.go b/main.go[m
[1mindex 4d1bf64..72ff04e 100644[m
[1m--- a/main.go[m
[1m+++ b/main.go[m
[36m@@ -3,19 +3,24 @@[m [mpackage main[m
 import ([m
 	"github.com/Desgue/hexagonal-architecture-go-example/internal/adapters/handlers/userhandler"[m
 	"github.com/Desgue/hexagonal-architecture-go-example/internal/adapters/repositories/usersrepo"[m
[31m-	"github.com/Desgue/hexagonal-architecture-go-example/internal/core/domain"[m
 	"github.com/Desgue/hexagonal-architecture-go-example/internal/core/service/userservice"[m
 	"github.com/gin-gonic/gin"[m
 )[m
 [m
[32m+[m[32mconst ([m
[32m+[m	[32mlocalHost  = "http://localhost:8000"[m
[32m+[m	[32mlocalTable = "Users"[m
[32m+[m[32m)[m
[32m+[m
 func main() {[m
[31m-	users := map[string]domain.User{[m
[32m+[m	[32m/* users := map[string]domain.User{[m
 		"1": {Id: "1", Name: "Tester1"},[m
 		"2": {Id: "2", Name: "Tester2"},[m
[31m-	}[m
[32m+[m	[32m} */[m
 [m
 	r := gin.Default()[m
[31m-	repo := usersrepo.NewFakeRepository(users)[m
[32m+[m	[32m//repo := usersrepo.NewFakeRepository(users)[m
[32m+[m	[32mrepo := usersrepo.NewDynamoRepository(localHost, localTable)[m
 	service := userservice.NewUserService(repo)[m
 	usersHttpHandler := userhandler.NewUserHttpHandler(service)[m
 	userhandler.RegisterRoutes(r, usersHttpHandler)[m
